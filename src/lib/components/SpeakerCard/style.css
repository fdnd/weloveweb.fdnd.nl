.speaker-card {
  aspect-ratio: 16/7;
  --translateY: 1em;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: auto 1fr auto;
  gap: 0 var(--padding);
  animation-timeline: view();
  transform-origin: top center;
  scroll-margin-top: calc(var(--padding-top) * 3);
  --translateY: calc((var(--count) - var(--index)) * -1em);
  --scale-multiplier: var(--index) / var(--count);

  @supports (grid-template-columns: subgrid) {
    grid-template-columns: subgrid;
  }
}
@media (max-width: 400px) {
  .speaker-card {
    aspect-ratio: 4/5;
  }
}

/* don't add sticky or animation-timeline to the speaker-card if user prefers reduced motion */
@media (prefers-reduced-motion: no-preference) {
  .speaker-card {
    position: sticky;
    top: calc(var(--padding-top) * 2);

    @supports (animation-timeline: view()) {
      animation-name: ScaleDown;
      animation-fill-mode: forwards;
      animation-range: entry calc(100lvh - var(--padding-top) * 2) entry 150lvh;
    }
  }
}

@media (max-width: 750px) {
  .speaker-card {
    gap: 0 0.5rem;
  }
}

@keyframes ScaleDown {
  to {
    transform: scale(calc(0.9 + 0.05 * var(--scale-multiplier))) translateY(var(--translateY));
  }
}

/* change styling if the event is the next event */
.speaker-card.is-next-event .speaker-date time {
  color: var(--color);
  background-color: var(--base-color);
}

.speaker-date {
  grid-column: 1 / -1;
  text-decoration: none;
}

.speaker-date time {
  font-weight: 800;
  border-radius: var(--small-radius) var(--small-radius) 0 0;
  padding: 0.25em 0.5em;
  box-shadow: 0.25rem 0.25rem 0 var(--color);
  border: 1px solid var(--color);
  color: var(--base-color);
  background-color: var(--color);
  border-bottom: none;
  margin-bottom: -1px;
  display: block;
  width: max-content;
  margin-left: auto;
}
.speaker-main {
  display: grid;
  align-items: center;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  gap: 0 0.5rem;
}

.speaker-main img {
  grid-column: 1;
  grid-row: 1 / 3;
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  object-fit: cover;
  aspect-ratio: 1;
  object-fit: cover;
}

.speaker-main .meta {
  align-self: start;
}

.talk-info {
  position: relative;
  background-color: var(--background);
  border: var(--border-width) solid currentColor;
  padding: var(--padding);
  border-radius: var(--small-radius) 0 0 var(--small-radius);
  display: grid;
  grid-column: 1 / -1;
  box-shadow: 0.25rem 0.25rem 0 currentColor;
  align-content: start;
}

.speaker-talk-description {
  margin-top: 0.5em;
}

.speaker-info {
  position: relative;
  grid-column: 2 / -1;

  border: var(--border-width) solid currentColor;
  border-radius: 0 0 var(--small-radius) var(--small-radius);
  border-top: none;
  background-color: var(--background);
  margin-top: calc(var(--border-width) * -1);
  padding: 0 var(--padding) var(--padding) var(--padding);
  
  box-shadow: 0.25rem 0.25rem 0 currentColor;

}

.speaker-info::before {
  content: "";
  position: absolute;
  top: 0;
  border-radius: 0 50% 0 0;
  box-shadow:
    0 0 0 currentColor,
    3px -3px 0 var(--background);
  right: 100%;
  width: calc(var(--small-radius) * 1.5);
  height: calc(var(--small-radius) * 1.5);
}

.speaker-info::after {
  content: "";
  position: absolute;
  z-index: -1;
  top: calc(0.25rem + calc(var(--border-width)));
  right: calc(100% + var(--border-width));
  border-radius: 0 50% 0 0;
  /* background-color: var(--background); */
  box-shadow:
    0 0 0 currentColor,
    0.25rem -5px 0 currentColor;
  width: calc(var(--small-radius) * 1.5);
  height: calc(var(--small-radius) * 1.5);
}

.speaker-bio {
  margin-top: 0.5em;
}



